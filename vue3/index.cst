<%@ Template Language="C#" TargetLanguage="Text" Description="vue3模板" %>
<%@ Assembly Name="SchemaExplorer" %>
<%@ Import Namespace="SchemaExplorer" %>
<%@ Import Namespace="System.Collections.Generic" %>

<%@ Property Name="SourceTable" Type="SchemaExplorer.TableSchema" Category="Context" Description="所基于的表" %>
<%@ Property Name="ExtJson" Type="JToken" Category="Context" Description="表额外数据" %>

<!-- #include file="..\\common\\utils.cst" -->
<!-- #include file="..\\common\\mapTypeTransform.cst" -->
<%
#region 准备子表数据

// 表字段额外数据
JToken ExtInfo = ExtJson["field"];
// 子表名称
string subTableName = (string)ExtJson["sub_table"];

// 子表字段额外数据
JToken ExtSubTableInfo = null;
// 子表字段名集合
List<string> subFieldNames = new List<string>();
if(subTableName != "") {
    ExtSubTableInfo = ExtJson["subTableJson"]["field"];
    foreach(JToken x in ExtSubTableInfo) {
        string fieldNameSub = x.Path.Split('.')[x.Path.Split('.').Length-1];
        subFieldNames.Add(fieldNameSub);
    }
}

#endregion

#region 主表表名集合（按配置顺序排列）

List<string> tableFieldNames = new List<string>();
foreach(JToken item in ExtInfo) {
    string fieldName = item.Path.Split('.')[item.Path.Split('.').Length-1];
    tableFieldNames.Add(fieldName);
}

#endregion

#region 是否有配置搜索

Boolean isSearch = false;
for(int i = 0; i < SourceTable.Columns.Count; i++)
{
    if((bool)ExtInfo[SourceTable.Columns[i].Name]["search"])
    {
        isSearch = true;
        break;
    }
}

#endregion

#region 字典标识收集 去除重复字典标识用作js变量

List<string> dicts = new List<string>();

// 主表字典处理
for(int i = 0; i < SourceTable.Columns.Count; i++)
{
    string fieldName = SourceTable.Columns[i].Name;
    if((string)ExtInfo[fieldName]["dict"] != "" && (string)ExtInfo[fieldName]["dict"] != "0")
    {
        if((string)ExtInfo[fieldName]["display"] == "select" || (string)ExtInfo[fieldName]["display"] == "selectMultiple" || (string)ExtInfo[fieldName]["display"] == "radio" || (string)ExtInfo[fieldName]["display"] == "checkbox")
        {
            if(!dicts.Contains((string)ExtInfo[fieldName]["dict"]))
            {
                dicts.Add((string)ExtInfo[fieldName]["dict"]);
            }
        }
    }
}
// 子表字典处理
if(subTableName != "")
{
    foreach(string fieldName in subFieldNames)
    {
        if((string)ExtSubTableInfo[fieldName]["dict"] != "" && (string)ExtSubTableInfo[fieldName]["dict"] != "0")
        {
            if((string)ExtSubTableInfo[fieldName]["display"] == "select" || (string)ExtSubTableInfo[fieldName]["display"] == "selectMultiple" || (string)ExtSubTableInfo[fieldName]["display"] == "radio" || (string)ExtSubTableInfo[fieldName]["display"] == "checkbox")
        {
            if(!dicts.Contains((string)ExtSubTableInfo[fieldName]["dict"]))
            {
                dicts.Add((string)ExtSubTableInfo[fieldName]["dict"]);
            }
        }
        }
    }
}

#endregion
%>
<template>
    <div class="app-container">
        <% if(isSearch) { %>
        <!-- 查询条件 -->
        <el-form :model="queryParams" ref="queryRef" :inline="true" v-show="showSearch" label-width="auto" @submit.prevent>
        <%-- 循环字段 --%>
        <% foreach(string fieldName in tableFieldNames) { %>
            <%-- 判断字段是否设置搜索查询 --%>
            <% if((bool)ExtInfo[fieldName]["search"] && (string)ExtInfo[fieldName]["query"] != "0") { %>
            <%-- 判断字段对应的表单类型 --%>
            <% if((string)ExtInfo[fieldName]["display"] == "input") { %>
            <%-- 文本框 --%>
            <el-form-item label="<%= ExtInfo[fieldName]["label"] %>" prop="query.<%= fieldName %>.value">
                <el-input v-model="queryParams.query.<%= fieldName %>.value" placeholder="<%= ExtInfo[fieldName]["label"] %>" clearable @keyup.enter="handleQuery" style="width: 214px" />
            </el-form-item>
            <% } else if((string)ExtInfo[fieldName]["display"] == "inputNumber") { %>
            <%-- 数字框 --%>
            <el-form-item label="<%= ExtInfo[fieldName]["label"] %>" prop="query.<%= fieldName %>.value">
                <el-input v-model="queryParams.query.<%= fieldName %>.value" placeholder="<%= ExtInfo[fieldName]["label"] %>" clearable @keyup.enter="handleQuery" style="width: 214px" type="number" />
            </el-form-item>
            <% } else if((string)ExtInfo[fieldName]["display"] == "textarea") { %>
            <%-- 文本域 --%>
            <el-form-item label="<%= ExtInfo[fieldName]["label"] %>" prop="query.<%= fieldName %>.value">
                <el-input v-model="queryParams.query.<%= fieldName %>.value" placeholder="<%= ExtInfo[fieldName]["label"] %>" type="textarea" @keyup.enter="handleQuery" />
            </el-form-item>
            <% } else if((string)ExtInfo[fieldName]["display"] == "select") { %>
            <%-- 下拉框 --%>
            <el-form-item label="<%= ExtInfo[fieldName]["label"] %>" prop="query.<%= fieldName %>.value">
                <el-select v-model="queryParams.query.<%= fieldName %>.value" placeholder="<%= ExtInfo[fieldName]["label"] %>" clearable>
                    <% if((string)ExtInfo[fieldName]["dict"] == "" || (string)ExtInfo[fieldName]["dict"] == "0") { %>
                    <el-option label="请手动写入选项 或者 选择字典生成" value="" />
                    <% } else { %>
                    <el-option v-for="dict in <%= ExtInfo[fieldName]["dict"] %>" :key="dict.value" :label="dict.label" :value="dict.value" />
                    <% } %>
                </el-select>
            </el-form-item>
            <% } else if((string)ExtInfo[fieldName]["display"] == "radio") { %>
            <%-- 单选框 --%>
            <el-form-item label="<%= ExtInfo[fieldName]["label"] %>" prop="query.<%= fieldName %>.value">
                <el-radio-group v-model="queryParams.query.<%= fieldName %>.value">
                    <% if((string)ExtInfo[fieldName]["dict"] == "" || (string)ExtInfo[fieldName]["dict"] == "0") { %>
                    <el-radio label="1">请手动写入选项 或者 选择字典生成</el-radio>
                    <% } else { %>
                    <el-radio v-for="dict in <%= ExtInfo[fieldName]["dict"] %>" :key="dict.value" :label="dict.value">{{dict.label}}</el-radio>
                    <% } %>
                </el-radio-group>
            </el-form-item>
            <% } else if((string)ExtInfo[fieldName]["display"] == "datetime" && (string)ExtInfo[fieldName]["query"] != "BETWEEN") { %>
            <%-- 日期时间 非范围 --%>
            <el-form-item label="<%= ExtInfo[fieldName]["label"] %>" prop="query.<%= fieldName %>.value">
                <el-date-picker clearable v-model="queryParams.query.<%= fieldName %>.value" type="datetime" value-format="YYYY-MM-DD HH:mm:ss" placeholder="请选择<%= ExtInfo[fieldName]["label"] %>"></el-date-picker>
            </el-form-item>
            <% } else if((string)ExtInfo[fieldName]["display"] == "datetime" && (string)ExtInfo[fieldName]["query"] == "BETWEEN") { %>
            <%-- 日期时间 范围 --%>
            <el-form-item label="<%= ExtInfo[fieldName]["label"] %>" prop="query.<%= fieldName %>.value">
                <el-date-picker v-model="queryParams.query.<%= fieldName %>.value" type="datetimerange" value-format="YYYY-MM-DD HH:mm:ss" range-separator="-" start-placeholder="开始日期" end-placeholder="结束日期"></el-date-picker>
            </el-form-item>
            <% } else if((string)ExtInfo[fieldName]["display"] == "date" && (string)ExtInfo[fieldName]["query"] != "BETWEEN") { %>
            <%-- 日期 非范围 --%>
            <el-form-item label="<%= ExtInfo[fieldName]["label"] %>" prop="query.<%= fieldName %>.value">
                <el-date-picker clearable v-model="queryParams.query.<%= fieldName %>.value" type="date" value-format="YYYY-MM-DD" placeholder="请选择<%= ExtInfo[fieldName]["label"] %>"></el-date-picker>
            </el-form-item>
            <% } else if((string)ExtInfo[fieldName]["display"] == "date" && (string)ExtInfo[fieldName]["query"] == "BETWEEN") { %>
            <%-- 日期 范围 --%>
            <el-form-item label="<%= ExtInfo[fieldName]["label"] %>" prop="query.<%= fieldName %>.value">
                <el-date-picker v-model="queryParams.query.<%= fieldName %>.value" type="daterange" value-format="YYYY-MM-DD" range-separator="-" start-placeholder="开始日期" end-placeholder="结束日期"></el-date-picker>
            </el-form-item>
            <% } %>
            <% } %>
        <% } %>
            <el-form-item>
                <el-button type="primary" @click="handleQuery" v-autoBlur>搜索</el-button>
                <el-button @click="resetQuery" v-autoBlur>重置</el-button>
            </el-form-item>
        </el-form>
        <% } %>
        <%-- 是否有 添加 删除 导出 功能 --%>
        <% if((bool)ExtJson["btn_add"] || (bool)ExtJson["btn_del"] || (bool)ExtJson["btn_export"]) { %>
        <!-- 操作按钮 -->
        <el-row :gutter="10" class="mb8">
            <% if((bool)ExtJson["btn_add"]) { %>
            <el-col :span="1.5" v-hasPermi="['<%= SnakeFormatHump(SourceTable.Name, true) %>.add']">
                <el-button type="primary" plain icon="Plus" @click="handleAdd" v-autoBlur>添加</el-button>
            </el-col>
            <% } %>
            <% if((bool)ExtJson["btn_del"]) { %>
            <el-col :span="1.5" v-hasPermi="['<%= SnakeFormatHump(SourceTable.Name, true) %>.del']">
                <el-button type="danger" plain icon="Delete" :disabled="multiple" @click="handleDelete" v-autoBlur>删除</el-button>
            </el-col>
            <% } %>
            <% if((bool)ExtJson["btn_export"]) { %>
            <el-col :span="1.5" v-hasPermi="['<%= SnakeFormatHump(SourceTable.Name, true) %>.export']">
                <el-button type="success" plain icon="Download" @click="handleExport" :loading="btnExportLoading" v-autoBlur>导出</el-button>
            </el-col>
            <% } %>
            <right-toolbar :search="<%= isSearch.ToString().ToLower() %>" v-model:showSearch="showSearch" @queryTable="getList"></right-toolbar>
        </el-row>
        <% } %>
        <!-- 表格 -->
        <el-table v-loading="loading" :data="tableList" empty-text="暂无数据~" @selection-change="handleSelectionChange"<% if(subTableName != ""){ %> @expand-change="handleExpandChange"<% } %>>
            <el-table-column type="selection" width="55" align="center" />
            <%-- 子表展示 --%>
            <% if(subTableName != "") { %>
            <!-- 子表数据展示 -->
            <el-table-column type="expand">
                <template #default="{ row }">
                    <el-table class="sub-table" :data="subTableData[`subTableList${row.id}`]" empty-text="暂无数据~" :cell-style="{ padding: '8px 20px', backgroundColor: '#f8f8f9' }" :header-cell-style="{ padding: '0 20px' }">
                        <%-- 循环字段 --%>
                        <% foreach(string fieldName in subFieldNames) { %>
                        <%-- 判断字段是否设置列表显示 --%>
                        <% if((bool)ExtSubTableInfo[fieldName]["list"]) { %>
                        <%
                            // 加单位
                            string subTableLabel = (string)ExtSubTableInfo[fieldName]["label"];
                            string subTableUnit = (string)ExtSubTableInfo[fieldName]["unit"];
                            if(subTableUnit != "") {
                                subTableLabel = subTableLabel + "（" + subTableUnit + "）";
                            }
                        %>
                        <%-- 判断字段对应的表单类型 --%>
                        <% if((string)ExtSubTableInfo[fieldName]["display"] == "input") { %>
                        <%-- 文本框 --%>
                        <el-table-column label="<%= subTableLabel %>" align="center" prop="<%= fieldName %>">
                            <template #default="{ row }">
                                <%-- 系数处理 --%>
                                <% if((string)ExtSubTableInfo[fieldName]["rate"] != "") { %>
                                {{ proxy.calc(row.<%= fieldName %>, <%= ExtSubTableInfo[fieldName]["rate"] %>) }}
                                <% } else { %>
                                {{ row.<%= fieldName %> }}
                                <% } %>
                            </template>
                        </el-table-column>
                        <% } else if((string)ExtSubTableInfo[fieldName]["display"] == "inputNumber") { %>
                        <%-- 数字框 --%>
                        <el-table-column label="<%= subTableLabel %>" align="center" prop="<%= fieldName %>">
                            <template #default="{ row }">
                                <%-- 系数处理 --%>
                                <% if((string)ExtSubTableInfo[fieldName]["rate"] != "") { %>
                                {{ proxy.calc(row.<%= fieldName %>, <%= ExtSubTableInfo[fieldName]["rate"] %>) }}
                                <% } else { %>
                                {{ row.<%= fieldName %> }}
                                <% } %>
                            </template>
                        </el-table-column>
                        <% } else if((string)ExtSubTableInfo[fieldName]["display"] == "textarea") { %>
                        <%-- 文本域 --%>
                        <el-table-column label="<%= subTableLabel %>" align="center" prop="<%= fieldName %>" />
                        <% } else if((string)ExtSubTableInfo[fieldName]["display"] == "select") { %>
                        <%-- 下拉框 --%>
                        <% if((string)ExtSubTableInfo[fieldName]["dict"] == "" || (string)ExtSubTableInfo[fieldName]["dict"] == "0") { %>
                        <el-table-column label="<%= subTableLabel %>" align="center" prop="<%= fieldName %>" />
                        <% } else { %>
                        <el-table-column label="<%= subTableLabel %>" align="center" prop="<%= fieldName %>">
                            <template #default="{ row }">
                                <dict-tag :options="<%= ExtSubTableInfo[fieldName]["dict"] %>" :value="row.<%= fieldName %>" />
                            </template>
                        </el-table-column>
                        <% } %>
                        <% } else if((string)ExtSubTableInfo[fieldName]["display"] == "selectMultiple") { %>
                        <%-- 下拉框（多选） --%>
                        <% if((string)ExtSubTableInfo[fieldName]["dict"] == "" || (string)ExtSubTableInfo[fieldName]["dict"] == "0") { %>
                        <el-table-column label="<%= subTableLabel %>" align="center" prop="<%= fieldName %>" />
                        <% } else { %>
                        <el-table-column label="<%= subTableLabel %>" align="center" prop="<%= fieldName %>">
                            <template #default="{ row }">
                                <dict-tag :options="<%= ExtSubTableInfo[fieldName]["dict"] %>" :value="row.<%= fieldName %> ? row.<%= fieldName %>.split(',') : []" />
                            </template>
                        </el-table-column>
                        <% } %>
                        <% } else if((string)ExtSubTableInfo[fieldName]["display"] == "radio") { %>
                        <%-- 单选框 --%>
                        <% if((string)ExtSubTableInfo[fieldName]["dict"] == "" || (string)ExtSubTableInfo[fieldName]["dict"] == "0") { %>
                        <el-table-column label="<%= subTableLabel %>" align="center" prop="<%= fieldName %>" />
                        <% } else { %>
                        <el-table-column label="<%= subTableLabel %>" align="center" prop="<%= fieldName %>">
                            <template #default="{ row }">
                                <dict-tag :options="<%= ExtSubTableInfo[fieldName]["dict"] %>" :value="row.<%= fieldName %>" />
                            </template>
                        </el-table-column>
                        <% } %>
                        <% } else if((string)ExtSubTableInfo[fieldName]["display"] == "checkbox") { %>
                        <%-- 复选框 --%>
                        <% if((string)ExtSubTableInfo[fieldName]["dict"] == "" || (string)ExtSubTableInfo[fieldName]["dict"] == "0") { %>
                        <el-table-column label="<%= subTableLabel %>" align="center" prop="<%= fieldName %>" />
                        <% } else { %>
                        <el-table-column label="<%= subTableLabel %>" align="center" prop="<%= fieldName %>">
                            <template #default="{ row }">
                                <dict-tag :options="<%= ExtSubTableInfo[fieldName]["dict"] %>" :value="row.<%= fieldName %> ? row.<%= fieldName %>.split(',') : []" />
                            </template>
                        </el-table-column>
                        <% } %>
                        <% } else if((string)ExtSubTableInfo[fieldName]["display"] == "datetime") { %>
                        <%-- 日期时间 --%>
                        <el-table-column label="<%= subTableLabel %>" align="center" prop="<%= fieldName %>" width="200" />
                        <% } else if((string)ExtSubTableInfo[fieldName]["display"] == "date") { %>
                        <%-- 日期 --%>
                        <el-table-column label="<%= subTableLabel %>" align="center" prop="<%= fieldName %>" width="180" />
                        <% } else if((string)ExtSubTableInfo[fieldName]["display"] == "imageUpload") { %>
                        <%-- 图片上传 --%>
                        <el-table-column label="<%= subTableLabel %>" align="center" prop="<%= fieldName %>" width="100">
                            <template #default="{ row }">
                                <image-preview :src="row.<%= fieldName %>" :width="50" :height="50" />
                            </template>
                        </el-table-column>
                        <% } else if((string)ExtSubTableInfo[fieldName]["display"] == "imageUploadMultiple") { %>
                        <%-- 图片上传（多） --%>
                        <el-table-column label="<%= subTableLabel %>" align="center" prop="<%= fieldName %>" width="100">
                            <template #default="{ row }">
                                <image-preview :src="row.<%= fieldName %>" :width="50" :height="50" />
                            </template>
                        </el-table-column>
                        <% } else if((string)ExtSubTableInfo[fieldName]["display"] == "0" || (string)ExtSubTableInfo[fieldName]["display"] == "") { %>
                        <%-- 为空直接展示 --%>
                        <el-table-column label="<%= subTableLabel %>" align="center" prop="<%= fieldName %>" />
                        <% } %>
                        <% } %>
                        <% } %>
                    </el-table>
                </template>
            </el-table-column>
            <% } %>
            <%-- 循环字段 --%>
            <% foreach(string fieldName in tableFieldNames) { %>
            <%-- 判断字段是否设置列表显示 --%>
            <% if((bool)ExtInfo[fieldName]["list"]) { %>
            <%
                // 加单位
                string label = (string)ExtInfo[fieldName]["label"];
                string unit = (string)ExtInfo[fieldName]["unit"];
                if(unit != "") {
                    label = label + "（" + unit + "）";
                }
            %>
            <%-- 判断字段对应的表单类型 --%>
            <% if((string)ExtInfo[fieldName]["display"] == "input") { %>
            <%-- 文本框 --%>
            <el-table-column label="<%= label %>" align="center" prop="<%= fieldName %>">
                <template #default="{ row }">
                    <%-- 系数处理 --%>
                    <% if((string)ExtInfo[fieldName]["rate"] != "") { %>
                    {{ proxy.calc(row.<%= fieldName %>, <%= ExtInfo[fieldName]["rate"] %>) }}
                    <% } else { %>
                    {{ row.<%= fieldName %> }}
                    <% } %>
                </template>
            </el-table-column>
            <% } else if((string)ExtInfo[fieldName]["display"] == "inputNumber") { %>
            <%-- 数字框 --%>
            <el-table-column label="<%= label %>" align="center" prop="<%= fieldName %>">
                <template #default="{ row }">
                    <%-- 系数处理 --%>
                    <% if((string)ExtInfo[fieldName]["rate"] != "") { %>
                    {{ proxy.calc(row.<%= fieldName %>, <%= ExtInfo[fieldName]["rate"] %>) }}
                    <% } else { %>
                    {{ row.<%= fieldName %> }}
                    <% } %>
                </template>
            </el-table-column>
            <% } else if((string)ExtInfo[fieldName]["display"] == "textarea") { %>
            <%-- 文本域 --%>
            <el-table-column label="<%= label %>" align="center" prop="<%= fieldName %>" />
            <% } else if((string)ExtInfo[fieldName]["display"] == "select") { %>
            <%-- 下拉框 --%>
            <% if((string)ExtInfo[fieldName]["dict"] == "" || (string)ExtInfo[fieldName]["dict"] == "0") { %>
            <el-table-column label="<%= label %>" align="center" prop="<%= fieldName %>" />
            <% } else { %>
            <el-table-column label="<%= label %>" align="center" prop="<%= fieldName %>">
                <template #default="{ row }">
                    <dict-tag :options="<%= ExtInfo[fieldName]["dict"] %>" :value="row.<%= fieldName %>" />
                </template>
            </el-table-column>
            <% } %>
            <% } else if((string)ExtInfo[fieldName]["display"] == "selectMultiple") { %>
            <%-- 下拉框（多选） --%>
            <% if((string)ExtInfo[fieldName]["dict"] == "" || (string)ExtInfo[fieldName]["dict"] == "0") { %>
            <el-table-column label="<%= label %>" align="center" prop="<%= fieldName %>" />
            <% } else { %>
            <el-table-column label="<%= label %>" align="center" prop="<%= fieldName %>">
                <template #default="{ row }">
                    <dict-tag :options="<%= ExtInfo[fieldName]["dict"] %>" :value="row.<%= fieldName %> ? row.<%= fieldName %>.split(',') : []" />
                </template>
            </el-table-column>
            <% } %>
            <% } else if((string)ExtInfo[fieldName]["display"] == "radio") { %>
            <%-- 单选框 --%>
            <% if((string)ExtInfo[fieldName]["dict"] == "" || (string)ExtInfo[fieldName]["dict"] == "0") { %>
            <el-table-column label="<%= label %>" align="center" prop="<%= fieldName %>" />
            <% } else { %>
            <el-table-column label="<%= label %>" align="center" prop="<%= fieldName %>">
                <template #default="{ row }">
                    <dict-tag :options="<%= ExtInfo[fieldName]["dict"] %>" :value="row.<%= fieldName %>" />
                </template>
            </el-table-column>
            <% } %>
            <% } else if((string)ExtInfo[fieldName]["display"] == "checkbox") { %>
            <%-- 复选框 --%>
            <% if((string)ExtInfo[fieldName]["dict"] == "" || (string)ExtInfo[fieldName]["dict"] == "0") { %>
            <el-table-column label="<%= label %>" align="center" prop="<%= fieldName %>" />
            <% } else { %>
            <el-table-column label="<%= label %>" align="center" prop="<%= fieldName %>">
                <template #default="{ row }">
                    <dict-tag :options="<%= ExtInfo[fieldName]["dict"] %>" :value="row.<%= fieldName %> ? row.<%= fieldName %>.split(',') : []" />
                </template>
            </el-table-column>
            <% } %>
            <% } else if((string)ExtInfo[fieldName]["display"] == "datetime") { %>
            <%-- 日期时间 --%>
            <el-table-column label="<%= label %>" align="center" prop="<%= fieldName %>" width="180" />
            <% } else if((string)ExtInfo[fieldName]["display"] == "date") { %>
            <%-- 日期 --%>
            <el-table-column label="<%= label %>" align="center" prop="<%= fieldName %>" width="180" />
            <% } else if((string)ExtInfo[fieldName]["display"] == "imageUpload") { %>
            <%-- 图片上传 --%>
            <el-table-column label="<%= label %>" align="center" prop="<%= fieldName %>" width="100">
                <template #default="{ row }">
                    <image-preview :src="row.<%= fieldName %>" :width="50" :height="50" />
                </template>
            </el-table-column>
            <% } else if((string)ExtInfo[fieldName]["display"] == "imageUploadMultiple") { %>
            <%-- 图片上传（多） --%>
            <el-table-column label="<%= label %>" align="center" prop="<%= fieldName %>" width="100">
                <template #default="{ row }">
                    <image-preview :src="row.<%= fieldName %>" :width="50" :height="50" />
                </template>
            </el-table-column>
            <% } else if((string)ExtInfo[fieldName]["display"] == "0" || (string)ExtInfo[fieldName]["display"] == "") { %>
            <%-- 为空直接展示 --%>
            <el-table-column label="<%= label %>" align="center" prop="<%= fieldName %>" />
            <% } %>
            <% } %>
            <% } %>
            <%-- 是否有 编辑 删除 功能 --%>
            <% if((bool)ExtJson["btn_edit"] || (bool)ExtJson["btn_del"]) { %>
            <el-table-column label="操作" align="center" <% if(subTableName == "") { %>fixed="right" <% } %>class-name="small-padding fixed-width" width="236" v-hasPermi="['<%= SnakeFormatHump(SourceTable.Name, true) %>.edit', '<%= SnakeFormatHump(SourceTable.Name, true) %>.del']">
                <template #default="{ row }">
                    <% if((bool)ExtJson["btn_edit"]) { %>
                    <el-button link type="primary" @click="handleEdit(row)" v-hasPermi="['<%= SnakeFormatHump(SourceTable.Name, true) %>.edit']" v-autoBlur>修改</el-button>
                    <% } %>
                    <% if((bool)ExtJson["btn_del"]) { %>
                    <el-button link type="danger" @click="handleDelete(row)" v-hasPermi="['<%= SnakeFormatHump(SourceTable.Name, true) %>.del']" v-autoBlur>删除</el-button>
                    <% } %>
                </template>
            </el-table-column>
            <% } %>
        </el-table>
        <!-- 分页 -->
        <pagination v-show="total > 0" :total="total" v-model:page="queryParams.page" v-model:limit="queryParams.limit" @pagination="getList" />
        <!-- 添加弹窗 -->
        <Add ref="addRef" @updateList="getList"></Add>
        <!-- 修改弹窗 -->
        <Edit ref="editRef" @updateList="getList"></Edit>
    </div>
</template>

<script setup name="<%= SnakeFormatHump(SourceTable.Name, true) %>">
import { ref, getCurrentInstance, provide, watch } from 'vue'
import { cloneDeep } from 'lodash-es'
import { list<%= SnakeFormatHump(SourceTable.Name, true) %>, del<%= SnakeFormatHump(SourceTable.Name, true) %><% if((bool)ExtJson["btn_export"]) { %>, export<%= SnakeFormatHump(SourceTable.Name, true) %><% } %><% if(subTableName != "") { %>, subDetail<%= SnakeFormatHump(SourceTable.Name, true) %><% } %> } from '@/api/<%= SnakeFormatHump(SourceTable.Name) %>'
<% if((bool)ExtJson["btn_export"]) { %>
import { exportJsonToExcel } from '@/utils/excel'
import { labelValueToKeyValue, exportFormatJson } from '@/utils/roc'
<% } %>
import Add from './add.vue'
import Edit from './edit.vue'
<% if(dicts.Count != 0) { %>
import { useHandleDict } from './js/useHandleDict.js'
<% } %>
<%
// 字典 js变量 js方法参数 处理
string dictsDot = "";
string dictsArgs = "";
for(int i = 0; i < dicts.Count; i++)
{
    if(i != dicts.Count - 1){
        dictsDot += dicts[i] + ", ";
        dictsArgs += "'" + dicts[i] + "'" + ", ";
    } else {
        dictsDot += dicts[i];
        dictsArgs += "'" + dicts[i] + "'";
    }
}
%>

/** @type {import('vue').ComponentInternalInstance} */
const instance = getCurrentInstance()
const proxy = instance.proxy
<% if(dicts.Count != 0) { %>
const { getDictData, <%= dictsDot %> } = useHandleDict()
<% } %>

/**
 * QueryParams 查询参数类型
 * @typedef QueryParams
 * @property {Number} page
 * @property {Number} limit
 * @property {Object} query
<% for(int i = 0; i < SourceTable.Columns.Count; i++) { %>
<% string fieldName = SourceTable.Columns[i].Name; %>
<%-- 判断字段是否设置查询 --%>
<% if((bool)ExtInfo[fieldName]["search"] && (string)ExtInfo[fieldName]["query"] != "0") { %>
 * @property {import('@/types').QueryFieldItem<<%= MysqlTypeToJsType(SourceTable.Columns[i].NativeType) %>>} query.<%= fieldName %>
<% } %>
<% } %>
 */

/** @type {import('vue').Ref<QueryParams>} */
const queryParams = ref({
    page: 1,
    limit: 10,
<% if(isSearch) { %>
    query: {
<% for(int i = 0; i < SourceTable.Columns.Count; i++) { %>
<% string fieldName = SourceTable.Columns[i].Name; %>
<%-- 判断字段是否设置查询 --%>
<% if((bool)ExtInfo[fieldName]["search"] && (string)ExtInfo[fieldName]["query"] != "0") { %>
        <%-- 多选 数组类型 --%>
        <% if((string)ExtInfo[fieldName]["display"] == "selectMultiple") { %>
        <%= fieldName %>: {
            type: '<%= ExtInfo[fieldName]["query"] %>',
            value: [],
        },
        <% } else { %>
        <%= fieldName %>: {
            type: '<%= ExtInfo[fieldName]["query"] %>',
            value: null,
        },
        <% } %>
<% } %>
<% } %>
    },
<% } else { %>
    query: {},
<% } %>
})

/** @type {import('vue').Ref<Number>} */
const total = ref(0)

/** @type {import('vue').Ref<Boolean>} */
const loading = ref(false)

/** @type {import('vue').Ref<Boolean>} */
const multiple = ref(true)

/** @type {import('vue').Ref<Boolean>} */
const showSearch = ref(true)

/** @type {import('vue').Ref<Number[] | String[]>} */
const ids = ref([])

/** @type {import('vue').Ref<import('@/api/<%= SnakeFormatHump(SourceTable.Name) %>').<%= SnakeFormatHump(SourceTable.Name, true) %>[]>} */
const tableList = ref([])

/** 查询 <%= SourceTable.Description %> 列表 */
async function getList() {
    loading.value = true
    <% if(dicts.Count != 0) { %>
    getDictData()
    <% } %>
    const _queryParams = cloneDeep(queryParams.value)
    <% for(int i = 0; i < SourceTable.Columns.Count; i++) { %>
    <% string fieldName = SourceTable.Columns[i].Name; %>
    <%-- 判断字段是否设置查询 --%>
    <% if((bool)ExtInfo[fieldName]["search"] && (string)ExtInfo[fieldName]["query"] != "0") { %>
    <%-- 系数处理 --%>
    <% if((string)ExtInfo[fieldName]["display"] == "input" || (string)ExtInfo[fieldName]["display"] == "inputNumber") { %>
    <% if((string)ExtInfo[fieldName]["rate"] != "") { %>
    _queryParams.query.<%= fieldName %>.value = proxy.calc(_queryParams.query.<%= fieldName %>.value, <%= ExtInfo[fieldName]["rate"] %>, { decimal: 0, type: 'div' })
    <% } %>
    <% } %>
    <% } %>
    <% } %>
    list<%= SnakeFormatHump(SourceTable.Name, true) %>(_queryParams)
        .then((res) => {
            tableList.value = res.data.rows
            total.value = res.data.total
            loading.value = false
        }).catch(() => {
            loading.value = false
        })
}

/** 添加按钮操作 */
function handleAdd() {
    proxy.$refs['addRef'].handleAdd()
}

/**
 * 修改按钮操作
 * @param {import('@/api/<%= SnakeFormatHump(SourceTable.Name) %>').<%= SnakeFormatHump(SourceTable.Name, true) %> | Event} row
 */
function handleEdit(row) {
    const _row = cloneDeep(row)
    proxy.$refs['editRef'].handleEdit(_row)
}

/**
 * 删除按钮操作
 * @param {import('@/api/<%= SnakeFormatHump(SourceTable.Name) %>').<%= SnakeFormatHump(SourceTable.Name, true) %> | Event} row
 */
function handleDelete(row) {
    const _ids = row.<%= SourceTable.PrimaryKey.MemberColumns[0].Name %> || ids.value
    proxy.$modal
        .confirm('确定删除数据？')
        .then(function () {
            return del<%= SnakeFormatHump(SourceTable.Name, true) %>({ ids: _ids })
        })
        .then(() => {
            getList()
            proxy.$modal.msgSuccess('删除成功')
        })
        .catch(() => {})
}

/** 搜索按钮操作 */
function handleQuery() {
    queryParams.value.page = 1
    getList()
}

/** 搜索重置按钮操作 */
function resetQuery() {
    proxy.resetForm('queryRef')
    handleQuery()
}
<% if((bool)ExtJson["btn_export"]) { %>

/**
 * 选中的数据
 * @type {Ref<UnwrapRef<*[]>>}
 */
const selectData = ref([])
<% } %>

/**
 * 表格前多选框选中数据
 * @param {import('@/api/<%= SnakeFormatHump(SourceTable.Name) %>').<%= SnakeFormatHump(SourceTable.Name, true) %>[]} selection
 */
function handleSelectionChange(selection) {
    <% if((bool)ExtJson["btn_export"]) { %>
    selectData.value = selection
    <% } %>
    ids.value = selection.map((item) => item.id)
    multiple.value = !selection.length
}
<% if((bool)ExtJson["btn_export"]) { %>

const btnExportLoading = ref(false)

<% if(dicts.Count != 0) { %>
// 导出功能 字典数据整理
const dictKeyValue = {}
watch([<%= dictsDot %>], ([<%= dictsDot %>]) => {
    <%-- 循环字段 --%>
    <% for(int i = 0; i < SourceTable.Columns.Count; i++) { %>
    <% string fieldName = SourceTable.Columns[i].Name; %>
    <%-- 判断字段是否设置列表显示 --%>
    <% if((bool)ExtInfo[fieldName]["list"]) { %>
    <% if((string)ExtInfo[fieldName]["dict"] != "" && (string)ExtInfo[fieldName]["dict"] != "0") { %>
    dictKeyValue['<%= fieldName %>'] = labelValueToKeyValue(<%= ExtInfo[fieldName]["dict"] %>)
    <% } %>
    <% } %>
    <% } %>
})

<% } %>
/**
 * 数据处理导出
 * @param exportData
 */
function handleDataExport(exportData) {
    const filename = '<%= SourceTable.Description %>'
    <%
        // 导出 表头&数据 处理
        string headerText = "";
        string fieldText = "";
        for(int i = 0; i < tableFieldNames.Count; i++) {
            string fieldName = tableFieldNames[i];
            if((bool)ExtInfo[fieldName]["list"]) {
                if((string)ExtInfo[fieldName]["display"] != "imageUpload" && (string)ExtInfo[fieldName]["display"] != "imageUploadMultiple" && (string)ExtInfo[fieldName]["display"] != "fileUpload" && (string)ExtInfo[fieldName]["display"] != "fileUploadMultiple" && (string)ExtInfo[fieldName]["display"] != "editor") {
                    // 加单位
                    string label = (string)ExtInfo[fieldName]["label"];
                    string unit = (string)ExtInfo[fieldName]["unit"];
                    if(unit != "") {
                        label = label + "（" + unit + "）";
                    }
                    if(i != tableFieldNames.Count - 1){
                        headerText += "'" + label + "', ";
                        fieldText += "'" + fieldName + "', ";
                    }else {
                        headerText += "'" + label + "'";
                        fieldText += "'" + fieldName + "'";
                    }
                }
            }
        }
        // 多选字段
        string fieldArgs = "";
        for(int i = 0; i < SourceTable.Columns.Count; i++) {
            string fieldName = SourceTable.Columns[i].Name;
            if((bool)ExtInfo[fieldName]["list"] == true) {
                if((string)ExtInfo[fieldName]["display"] == "checkbox" || (string)ExtInfo[fieldName]["display"] == "selectMultiple") {
                    if((string)ExtInfo[fieldName]["dict"] != "0" && (string)ExtInfo[fieldName]["dict"] != "") {
                        if(i != SourceTable.Columns.Count - 1){
                            fieldArgs += "{ field: '" + fieldName + "'}" + ", ";
                        }else {
                            fieldArgs += "{ field: '" + fieldName + "'}";
                        }
                    }
                }
            }
        }
    %>
    const header = [<%= headerText %>]
    const filterVal = [<%= fieldText %>]
    const _exportData = cloneDeep(exportData)
    _exportData.forEach((dataItem) => {
    <% for(int i = 0; i < SourceTable.Columns.Count; i++) { %>
    <% string fieldName = SourceTable.Columns[i].Name; %>
    <%-- 判断字段是否设置列表 --%>
    <% if((bool)ExtInfo[fieldName]["list"]) { %>
        <%-- 系数处理 --%>
        <% if((string)ExtInfo[fieldName]["display"] == "input" || (string)ExtInfo[fieldName]["display"] == "inputNumber") { %>
        <% if((string)ExtInfo[fieldName]["rate"] != "") { %>
        dataItem.<%= fieldName %> = proxy.calc(dataItem.<%= fieldName %>, <%= ExtInfo[fieldName]["rate"] %>)
        <% } %>
        <% } %>
    <% } %>
    <% } %>
    })
    const data = exportFormatJson(filterVal, _exportData<% if(dicts.Count != 0) { %>, dictKeyValue, [<%= fieldArgs %>]<% } %>)
    exportJsonToExcel({ header, data, filename })
    proxy.$modal.msgSuccess('导出成功')
}

/** 导出按钮操作 */
function handleExport() {
    btnExportLoading.value = true
    if (selectData.value.length) {
        proxy.$modal
            .confirm('是否导出选中数据')
            .then(function () {
                handleDataExport(selectData.value)
                btnExportLoading.value = false
            })
            .catch(() => {
                btnExportLoading.value = false
            })
    } else {
        proxy.$modal
            .confirm('是否导出全部数据')
            .then(function () {
                export<%= SnakeFormatHump(SourceTable.Name, true) %>({ query: queryParams.value.query })
                    .then((res) => {
                        handleDataExport(res.data.rows)
                        btnExportLoading.value = false
                    })
                    .catch(() => {
                        btnExportLoading.value = false
                    })
            })
            .catch(() => {
                btnExportLoading.value = false
            })
    }
}
<% } %>
<% if(subTableName != "") { %>

/** @type {import('vue').Ref<Object[]>} */
const subTableData = ref({})

/**
 * 展开行请求子表数据
 * @param row
 * @param expandedRows
 */
function handleExpandChange(row, expandedRows) {
    let isExpand = false
    if (expandedRows.length) {
        isExpand = expandedRows.some((item) => item.id === row.id)
    }
    if (!isExpand) return
    subDetail<%= SnakeFormatHump(SourceTable.Name, true) %>(row.id).then((res) => {
        subTableData.value[`subTableList${row.id}`] = res.data
    })
}
<% } %>

getList()
</script>

<style scoped lang="scss"></style>
