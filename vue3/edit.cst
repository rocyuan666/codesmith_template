<%@ Template Language="C#" TargetLanguage="Text" Description="vue3模板" %>
<%@ Assembly Name="SchemaExplorer" %>
<%@ Import Namespace="SchemaExplorer" %>
<%@ Import Namespace="CodeSmith.Engine.Json.Linq" %>
<%@ Import Namespace="System.Collections.Generic" %>

<%@ Property Name="SourceTable" Type="SchemaExplorer.TableSchema" Category="Context" Description="所基于的表" %>
<%@ Property Name="ExtJson" Type="JToken" Category="Context" Description="表额外数据" %>

<!-- #include file="..\\common\\utils.cst" -->
<!-- #include file="..\\common\\mapTypeTransform.cst" -->
<%
#region 准备子表数据

// 表字段额外数据
JToken ExtInfo = ExtJson["field"];
// 子表名称
string subTableName = (string)ExtJson["sub_table"];

// 子表字段额外数据
JToken ExtSubTableInfo = null;
// 子表字段名集合
List<string> subFieldNames = new List<string>();
if(subTableName != "") {
    ExtSubTableInfo = ExtJson["subTableJson"]["field"];
    foreach(JToken x in ExtSubTableInfo) {
        string fieldNameSub = x.Path.Split('.')[x.Path.Split('.').Length-1];
        subFieldNames.Add(fieldNameSub);
    }
}

#endregion

#region 主表表名集合（按配置顺序排列）

List<string> tableFieldNames = new List<string>();
foreach(JToken item in ExtInfo) {
    string fieldName = item.Path.Split('.')[item.Path.Split('.').Length-1];
    tableFieldNames.Add(fieldName);
}

#endregion

#region 编辑是否有配置校验

// 主表是否有配置校验
Boolean isEditCheck = false;
for(int i = 0; i < SourceTable.Columns.Count; i++)
{
    string fieldName = SourceTable.Columns[i].Name;
    if((bool)ExtInfo[fieldName]["edit"] == true)
    {
        if((bool)ExtInfo[fieldName]["required"] == true || (string)ExtInfo[fieldName]["rules"] == "0" || (string)ExtInfo[fieldName]["rules"] == "")
        {
            isEditCheck = true;
            break;
        }
    }
}

// 子表是否有配置校验
Boolean isSubTableEditCheck = false;
foreach(string fieldName in subFieldNames) {
    if((bool)ExtSubTableInfo[fieldName]["edit"] == true)
    {
        if((bool)ExtSubTableInfo[fieldName]["required"] == true || (string)ExtSubTableInfo[fieldName]["rules"] == "0" || (string)ExtSubTableInfo[fieldName]["rules"] == "")
        {
            isSubTableEditCheck = true;
            break;
        }
    }
}

#endregion

#region 字典标识收集 去除重复字典标识用作js变量

List<string> dicts = new List<string>();

// 主表字典处理
for(int i = 0; i < SourceTable.Columns.Count; i++)
{
    string fieldName = SourceTable.Columns[i].Name;
    if((string)ExtInfo[fieldName]["dict"] != "" && (string)ExtInfo[fieldName]["dict"] != "0")
    {
        if((string)ExtInfo[fieldName]["display"] == "select" || (string)ExtInfo[fieldName]["display"] == "selectMultiple" || (string)ExtInfo[fieldName]["display"] == "radio" || (string)ExtInfo[fieldName]["display"] == "checkbox")
        {
            if(!dicts.Contains((string)ExtInfo[fieldName]["dict"]))
            {
                dicts.Add((string)ExtInfo[fieldName]["dict"]);
            }
        }
    }
}
// 子表字典处理
if(subTableName != "")
{
    foreach(string fieldName in subFieldNames)
    {
        if((string)ExtSubTableInfo[fieldName]["dict"] != "" && (string)ExtSubTableInfo[fieldName]["dict"] != "0")
        {
            if((string)ExtSubTableInfo[fieldName]["display"] == "select" || (string)ExtSubTableInfo[fieldName]["display"] == "selectMultiple" || (string)ExtSubTableInfo[fieldName]["display"] == "radio" || (string)ExtSubTableInfo[fieldName]["display"] == "checkbox")
        {
            if(!dicts.Contains((string)ExtSubTableInfo[fieldName]["dict"]))
            {
                dicts.Add((string)ExtSubTableInfo[fieldName]["dict"]);
            }
        }
        }
    }
}

#endregion

#region 子表是否需要处理数据
bool isHandleSubTableData = false;
foreach(string fieldName in subFieldNames) {
    if((bool)ExtSubTableInfo[fieldName]["edit"] == true) {
        if((string)ExtSubTableInfo[fieldName]["display"] == "checkbox" || (string)ExtSubTableInfo[fieldName]["display"] == "selectMultiple") {
            isHandleSubTableData = true;
            break;
        } else if((string)ExtSubTableInfo[fieldName]["display"] == "input" || (string)ExtSubTableInfo[fieldName]["display"] == "inputNumber") {
            if((string)ExtSubTableInfo[fieldName]["rate"] != "") {
                isHandleSubTableData = true;
                break;
            }
        }
    }
}
#endregion
%>
<template>
    <!-- draggable -->
    <el-dialog :title="title" v-model="open" width="1200px" :close-on-click-modal="false" append-to-body>
        <el-form ref="<%= SnakeFormatHump(SourceTable.Name) %>Ref" :model="form.row" :rules="rules" label-width="auto">
            <%-- 循环字段 --%>
            <% foreach(string fieldName in tableFieldNames) { %>
            <%
                // 字段是否是主键
                Boolean isPK = SourceTable.PrimaryKey.MemberColumns[0].Name == fieldName;
                if(isPK)
                {
                    continue;
                }
            %>
            <%-- 判断字段是否设置编辑 --%>
            <% if((bool)ExtInfo[fieldName]["edit"] == true) { %>
            <%
                // 单位
                string unit = (string)ExtInfo[fieldName]["unit"];
            %>
            <el-form-item label="<%= ExtInfo[fieldName]["label"] %>" prop="<%= fieldName %>">
                <%-- 判断字段对应的表单类型 --%>
                <% if((string)ExtInfo[fieldName]["display"] == "input") { %>
                <%-- 文本框 --%>
                <% if(unit == "") { %>
                <%-- 无单位 --%>
                <el-input v-model="form.row.<%= fieldName %>" placeholder="请输入<%= ExtInfo[fieldName]["label"] %>" :disabled="<%= ExtInfo[fieldName]["edit_disable"].ToString().ToLower() %>" />
                <% } else { %>
                <%-- 有单位 --%>
                <el-input v-model="form.row.<%= fieldName %>" placeholder="请输入<%= ExtInfo[fieldName]["label"] %>" :disabled="<%= ExtInfo[fieldName]["edit_disable"].ToString().ToLower() %>">
                    <template #append><%= unit %></template>
                </el-input>
                <% } %>
                <% } else if((string)ExtInfo[fieldName]["display"] == "inputNumber") { %>
                <%-- 数字框 --%>
                <% if(unit == "") { %>
                <%-- 无单位 --%>
                <el-input v-model="form.row.<%= fieldName %>" placeholder="请输入<%= ExtInfo[fieldName]["label"] %>" :disabled="<%= ExtInfo[fieldName]["edit_disable"].ToString().ToLower() %>" type="number" />
                <% } else { %>
                <%-- 有单位 --%>
                <el-input v-model="form.row.<%= fieldName %>" placeholder="请输入<%= ExtInfo[fieldName]["label"] %>" :disabled="<%= ExtInfo[fieldName]["edit_disable"].ToString().ToLower() %>" type="number">
                    <template #append><%= unit %></template>
                </el-input>
                <% } %>
                <% } else if((string)ExtInfo[fieldName]["display"] == "textarea") { %>
                <%-- 文本域 --%>
                <el-input v-model="form.row.<%= fieldName %>" type="textarea" placeholder="请输入<%= ExtInfo[fieldName]["label"] %>" :disabled="<%= ExtInfo[fieldName]["edit_disable"].ToString().ToLower() %>" />
                <% } else if((string)ExtInfo[fieldName]["display"] == "select") { %>
                <%-- 下拉框 --%>
                <el-select v-model="form.row.<%= fieldName %>" placeholder="请选择<%= ExtInfo[fieldName]["label"] %>" clearable :disabled="<%= ExtInfo[fieldName]["edit_disable"].ToString().ToLower() %>">
                    <% if((string)ExtInfo[fieldName]["dict"] == "" || (string)ExtInfo[fieldName]["dict"] == "0") { %>
                    <el-option label="请手动写入选项 或者 选择字典生成" value="" />
                    <% } else { %>
                    <el-option v-for="dict in <%= ExtInfo[fieldName]["dict"] %>" :key="dict.value" :label="dict.label" :value="dict.value" />
                    <% } %>
                </el-select>
                <% } else if((string)ExtInfo[fieldName]["display"] == "selectMultiple") { %>
                <%-- 下拉框（多选） --%>
                <el-select v-model="form.row.<%= fieldName %>" placeholder="请选择<%= ExtInfo[fieldName]["label"] %>" clearable :disabled="<%= ExtInfo[fieldName]["edit_disable"].ToString().ToLower() %>" multiple>
                    <% if((string)ExtInfo[fieldName]["dict"] == "" || (string)ExtInfo[fieldName]["dict"] == "0") { %>
                    <el-option label="请手动写入选项 或者 选择字典生成" value="" />
                    <% } else { %>
                    <el-option v-for="dict in <%= ExtInfo[fieldName]["dict"] %>" :key="dict.value" :label="dict.label" :value="dict.value" />
                    <% } %>
                </el-select>
                <% } else if((string)ExtInfo[fieldName]["display"] == "radio") { %>
                <%-- 单选框 --%>
                <el-radio-group v-model="form.row.<%= fieldName %>" :disabled="<%= ExtInfo[fieldName]["edit_disable"].ToString().ToLower() %>">
                    <% if((string)ExtInfo[fieldName]["dict"] == "" || (string)ExtInfo[fieldName]["dict"] == "0") { %>
                    <el-radio label="1">请手动写入选项 或者 选择字典生成</el-radio>
                    <% } else { %>
                    <el-radio v-for="dict in <%= ExtInfo[fieldName]["dict"] %>" :key="dict.value" :label="dict.value">{{dict.label}}</el-radio>
                    <% } %>
                </el-radio-group>
                <% } else if((string)ExtInfo[fieldName]["display"] == "checkbox") { %>
                <%-- 复选框 --%>
                <el-checkbox-group v-model="form.row.<%= fieldName %>" :disabled="<%= ExtInfo[fieldName]["edit_disable"].ToString().ToLower() %>">
                    <% if((string)ExtInfo[fieldName]["dict"] == "" || (string)ExtInfo[fieldName]["dict"] == "0") { %>
                    <el-checkbox label="1">请手动写入选项 或者 选择字典生成</el-checkbox>
                    <% } else { %>
                    <el-checkbox v-for="dict in <%= ExtInfo[fieldName]["dict"] %>" :key="dict.value" :label="dict.value">{{dict.label}}</el-checkbox>
                    <% } %>
                </el-checkbox-group>
                <% } else if((string)ExtInfo[fieldName]["display"] == "datetime") { %>
                <%-- 日期时间 --%>
                <el-date-picker clearable v-model="form.row.<%= fieldName %>" type="datetime" value-format="YYYY-MM-DD HH:mm:ss" placeholder="请选择<%= ExtInfo[fieldName]["label"] %>" :disabled="<%= ExtInfo[fieldName]["edit_disable"].ToString().ToLower() %>"></el-date-picker>
                <% } else if((string)ExtInfo[fieldName]["display"] == "date") { %>
                <%-- 日期 --%>
                <el-date-picker clearable v-model="form.row.<%= fieldName %>" type="date" value-format="YYYY-MM-DD" placeholder="请选择<%= ExtInfo[fieldName]["label"] %>" :disabled="<%= ExtInfo[fieldName]["edit_disable"].ToString().ToLower() %>"></el-date-picker>
                <% } else if((string)ExtInfo[fieldName]["display"] == "imageUpload") { %>
                <%-- 图片上传 --%>
                <image-upload v-model="form.row.<%= fieldName %>" :disabled="<%= ExtInfo[fieldName]["edit_disable"].ToString().ToLower() %>" />
                <% } else if((string)ExtInfo[fieldName]["display"] == "imageUploadMultiple") { %>
                <%-- 图片上传（多） --%>
                <image-upload v-model="form.row.<%= fieldName %>" :disabled="<%= ExtInfo[fieldName]["edit_disable"].ToString().ToLower() %>" :limit="10" />
                <% } else if((string)ExtInfo[fieldName]["display"] == "fileUpload") { %>
                <%-- 文件上传 --%>
                <file-upload v-model="form.row.<%= fieldName %>" :disabled="<%= ExtInfo[fieldName]["edit_disable"].ToString().ToLower() %>" />
                <% } else if((string)ExtInfo[fieldName]["display"] == "fileUploadMultiple") { %>
                <%-- 文件上传（多） --%>
                <file-upload v-model="form.row.<%= fieldName %>" :disabled="<%= ExtInfo[fieldName]["edit_disable"].ToString().ToLower() %>" :limit="10" />
                <% } else if((string)ExtInfo[fieldName]["display"] == "editor") { %>
                <%-- 富文本控件 --%>
                <editor v-model="form.row.<%= fieldName %>" :min-height="192" :readOnly="<%= ExtInfo[fieldName]["edit_disable"].ToString().ToLower() %>" />
                <% } %>
            </el-form-item>
            <% } %>
            <% } %>
            <%-- 子表数据添加 --%>
            <% if(subTableName != "") { %>
            <!-- 子表数据添加 -->
            <el-form-item label="明细" prop="row_details">
                <el-table :data="form.row.row_details" empty-text="暂无数据，点击下方+号填写明细~">
                    <%-- 循环字段 --%>
                    <% foreach(string fieldName in subFieldNames) { %>
                    <%-- 判断字段是否设置编辑 --%>
                    <% if((bool)ExtSubTableInfo[fieldName]["edit"] == true) { %>
                    <%
                        // 加单位
                        string subTableLabel = (string)ExtSubTableInfo[fieldName]["label"];
                        string subTableUnit = (string)ExtSubTableInfo[fieldName]["unit"];
                        if(subTableUnit != "") {
                            subTableLabel = subTableLabel + "（" + subTableUnit + "）";
                        }
                        
                    %>
                    <el-table-column label="<%= subTableLabel %>" align="center" prop="<%= fieldName %>">
                        <% if((bool)ExtSubTableInfo[fieldName]["required"] == true) { %>
                        <template #header> <span class="roc-require"></span><%= subTableLabel %> </template>
                        <% } %>
                        <template #default="{ row }">
                            <%-- 判断字段对应的表单类型 --%>
                            <% if((string)ExtSubTableInfo[fieldName]["display"] == "input") { %>
                            <%-- 文本框 --%>
                            <el-input v-model="row.<%= fieldName %>" placeholder="<%= ExtSubTableInfo[fieldName]["label"] %>" :disabled="<%= ExtSubTableInfo[fieldName]["edit_disable"].ToString().ToLower() %>" />
                            <% } else if((string)ExtSubTableInfo[fieldName]["display"] == "inputNumber") { %>
                            <%-- 数字框 --%>
                            <el-input v-model="row.<%= fieldName %>" placeholder="<%= ExtSubTableInfo[fieldName]["label"] %>" :disabled="<%= ExtSubTableInfo[fieldName]["edit_disable"].ToString().ToLower() %>" type="number" />
                            <% } else if((string)ExtSubTableInfo[fieldName]["display"] == "textarea") { %>
                            <%-- 文本域 --%>
                            <el-input v-model="row.<%= fieldName %>" type="textarea" placeholder="<%= ExtSubTableInfo[fieldName]["label"] %>" :disabled="<%= ExtSubTableInfo[fieldName]["edit_disable"].ToString().ToLower() %>" />
                            <% } else if((string)ExtSubTableInfo[fieldName]["display"] == "select") { %>
                            <%-- 下拉框 --%>
                            <el-select v-model="row.<%= fieldName %>" placeholder="<%= ExtSubTableInfo[fieldName]["label"] %>" clearable :disabled="<%= ExtSubTableInfo[fieldName]["edit_disable"].ToString().ToLower() %>">
                                <% if((string)ExtSubTableInfo[fieldName]["dict"] == "" || (string)ExtSubTableInfo[fieldName]["dict"] == "0") { %>
                                <el-option label="请手动写入选项 或者 选择字典生成" value="" />
                                <% } else { %>
                                <el-option v-for="dict in <%= ExtSubTableInfo[fieldName]["dict"] %>" :key="dict.value" :label="dict.label" :value="dict.value" />
                                <% } %>
                            </el-select>
                            <% } else if((string)ExtSubTableInfo[fieldName]["display"] == "selectMultiple") { %>
                            <%-- 下拉框（多选） --%>
                            <el-select v-model="row.<%= fieldName %>" placeholder="<%= ExtSubTableInfo[fieldName]["label"] %>" clearable :disabled="<%= ExtSubTableInfo[fieldName]["edit_disable"].ToString().ToLower() %>" multiple>
                                <% if((string)ExtSubTableInfo[fieldName]["dict"] == "" || (string)ExtSubTableInfo[fieldName]["dict"] == "0") { %>
                                <el-option label="请手动写入选项 或者 选择字典生成" value="" />
                                <% } else { %>
                                <el-option v-for="dict in <%= ExtSubTableInfo[fieldName]["dict"] %>" :key="dict.value" :label="dict.label" :value="dict.value" />
                                <% } %>
                            </el-select>
                            <% } else if((string)ExtSubTableInfo[fieldName]["display"] == "radio") { %>
                            <%-- 单选框 --%>
                            <el-radio-group v-model="row.<%= fieldName %>" :disabled="<%= ExtSubTableInfo[fieldName]["edit_disable"].ToString().ToLower() %>">
                                <% if((string)ExtSubTableInfo[fieldName]["dict"] == "" || (string)ExtSubTableInfo[fieldName]["dict"] == "0") { %>
                                <el-radio label="1">请手动写入选项 或者 选择字典生成</el-radio>
                                <% } else { %>
                                <el-radio v-for="dict in <%= ExtSubTableInfo[fieldName]["dict"] %>" :key="dict.value" :label="dict.value">{{dict.label}}</el-radio>
                                <% } %>
                            </el-radio-group>
                            <% } else if((string)ExtSubTableInfo[fieldName]["display"] == "checkbox") { %>
                            <%-- 复选框 --%>
                            <el-checkbox-group v-model="row.<%= fieldName %>" :disabled="<%= ExtSubTableInfo[fieldName]["edit_disable"].ToString().ToLower() %>">
                                <% if((string)ExtSubTableInfo[fieldName]["dict"] == "" || (string)ExtSubTableInfo[fieldName]["dict"] == "0") { %>
                                <el-checkbox label="1">请手动写入选项 或者 选择字典生成</el-checkbox>
                                <% } else { %>
                                <el-checkbox v-for="dict in <%= ExtSubTableInfo[fieldName]["dict"] %>" :key="dict.value" :label="dict.value">{{dict.label}}</el-checkbox>
                                <% } %>
                            </el-checkbox-group>
                            <% } else if((string)ExtSubTableInfo[fieldName]["display"] == "datetime") { %>
                            <%-- 日期时间 --%>
                            <el-date-picker clearable v-model="row.<%= fieldName %>" type="datetime" value-format="YYYY-MM-DD HH:mm:ss" placeholder="<%= ExtSubTableInfo[fieldName]["label"] %>" :disabled="<%= ExtSubTableInfo[fieldName]["edit_disable"].ToString().ToLower() %>"></el-date-picker>
                            <% } else if((string)ExtSubTableInfo[fieldName]["display"] == "date") { %>
                            <%-- 日期 --%>
                            <el-date-picker clearable v-model="row.<%= fieldName %>" type="date" value-format="YYYY-MM-DD" placeholder="<%= ExtSubTableInfo[fieldName]["label"] %>" :disabled="<%= ExtSubTableInfo[fieldName]["edit_disable"].ToString().ToLower() %>"></el-date-picker>
                            <% } else if((string)ExtSubTableInfo[fieldName]["display"] == "imageUpload") { %>
                            <%-- 图片上传 --%>
                            <image-upload v-model="row.<%= fieldName %>" :disabled="<%= ExtSubTableInfo[fieldName]["edit_disable"].ToString().ToLower() %>" />
                            <% } else if((string)ExtSubTableInfo[fieldName]["display"] == "imageUploadMultiple") { %>
                            <%-- 图片上传（多） --%>
                            <image-upload v-model="row.<%= fieldName %>" :disabled="<%= ExtSubTableInfo[fieldName]["edit_disable"].ToString().ToLower() %>" :limit="10" />
                            <% } else if((string)ExtSubTableInfo[fieldName]["display"] == "fileUpload") { %>
                            <%-- 文件上传 --%>
                            <file-upload v-model="row.<%= fieldName %>" :disabled="<%= ExtSubTableInfo[fieldName]["edit_disable"].ToString().ToLower() %>" />
                            <% } else if((string)ExtSubTableInfo[fieldName]["display"] == "fileUploadMultiple") { %>
                            <%-- 文件上传（多） --%>
                            <file-upload v-model="row.<%= fieldName %>" :disabled="<%= ExtSubTableInfo[fieldName]["edit_disable"].ToString().ToLower() %>" :limit="10" />
                            <% } else if((string)ExtSubTableInfo[fieldName]["display"] == "editor") { %>
                            <%-- 富文本控件 --%>
                            <editor v-model="row.<%= fieldName %>" :min-height="192" :readOnly="<%= ExtSubTableInfo[fieldName]["edit_disable"].ToString().ToLower() %>" />
                            <% } %>
                        </template>
                    </el-table-column>
                    <% } %>
                    <% } %>
                    <el-table-column label="操作" align="center" class-name="small-padding fixed-width" width="150">
                        <template #default="{ $index }">
                            <el-button link type="primary" icon="Delete" @click="handleSubTableDelete($index)" v-autoBlur> 删除 </el-button>
                        </template>
                    </el-table-column>
                </el-table>
                <el-icon @click="handleSubTableAdd" size="40" color="#909399" style="margin: 0 auto; cursor: pointer; margin-top: 10px"><CirclePlus /></el-icon>
            </el-form-item>
            <% } %>
        </el-form>
        <template #footer>
            <div class="dialog-footer">
                <el-button @click="cancel" v-autoBlur>取 消</el-button>
                <el-button type="primary" @click="submitForm" v-autoBlur>确 定</el-button>
            </div>
        </template>
    </el-dialog>
</template>

<script setup name="<%= SnakeFormatHump(SourceTable.Name, true) %>Edit">
import { ref, getCurrentInstance, inject } from 'vue'
import { cloneDeep } from 'lodash-es'
import { edit<%= SnakeFormatHump(SourceTable.Name, true) %><% if(subTableName != "") { %>, subDetail<%= SnakeFormatHump(SourceTable.Name, true) %><% } %> } from '@/api/<%= SnakeFormatHump(SourceTable.Name) %>'

const { proxy } = getCurrentInstance()
<% if(dicts.Count != 0) { %>

// 注入字典数据
<% for(int i = 0; i < dicts.Count; i++) { %>
const <%= dicts[i] %> = inject('<%= dicts[i] %>', () => [])
<% } %>
<% } %>

/**@type {import('vue').Ref<{row: import('@/api/<%= SnakeFormatHump(SourceTable.Name) %>').<%= SnakeFormatHump(SourceTable.Name, true) %> | Object}>} */
const form = ref({
    row: {},
})

/**@type {import('vue').Ref<import('element-plus').FormRules<import('@/api/<%= SnakeFormatHump(SourceTable.Name) %>').<%= SnakeFormatHump(SourceTable.Name, true) %>>>} */
const rules = ref({
    <% for(int i = 0; i < SourceTable.Columns.Count; i++) { %>
    <%
        // 字段名
        string fieldName = SourceTable.Columns[i].Name;
        // 字段是否是主键
        Boolean isPK = SourceTable.PrimaryKey.MemberColumns[0].Name == fieldName;
        if(isPK)
        {
            continue;
        }
    %>
    <% if((bool)ExtInfo[fieldName]["edit"] == true) { %>
    <%= fieldName %>: [
        <% if((bool)ExtInfo[fieldName]["required"] == true) { %>
        <%-- 必填验证 --%>
        { required: true, message: '<%= ExtInfo[fieldName]["label"] %>不能为空', trigger: 'blur' },
        <% } %>
        <% if((string)ExtInfo[fieldName]["rules"] != "" && (string)ExtInfo[fieldName]["rules"] != "0") { %>
        <%-- 正则验证 --%>
        <% foreach(JToken item in ExtInfo[fieldName]["rules_detail"]) { %>
        <%
            string message = "";
            if((string)item["memo"] != "") {
                message = (string)ExtInfo[fieldName]["label"] + (string)item["memo"];
            } else {
                message = (string)ExtInfo[fieldName]["label"] + "格式不正确";
            }
        %>
        { pattern: <%= item["value"] %>, message: '<%= message %>', trigger: 'blur' },
        <% } %>
        <% } %>
    ],
    <% } %>
    <% } %>
})

/**@type {import('vue').Ref<Boolean>} */
const open = ref(false)

/**@type {import('vue').Ref<String>} */
const title = ref('')

/**@type {EmitFn<string[]>} */
const emit = defineEmits(['updateList'])

/** 提交按钮 */
function submitForm() {
    proxy.$refs['<%= SnakeFormatHump(SourceTable.Name) %>Ref'].validate((valid) => {
        if (valid) {
            const _form = cloneDeep(form.value)
            <% if(subTableName != "") { %>
            <%--
                子表：多选 数组格式 转换","分割字符串 & 系数处理
            --%>
            <% if(isHandleSubTableData) { %>
            _form.row.row_details.forEach((rowItem) => {
                <% foreach(string fieldName in subFieldNames) { %>
                <% if((bool)ExtSubTableInfo[fieldName]["edit"] == true) { %>
                <%-- 数组转为字符串 --%>
                <% if((string)ExtSubTableInfo[fieldName]["display"] == "checkbox" || (string)ExtSubTableInfo[fieldName]["display"] == "selectMultiple") { %>
                rowItem.<%= fieldName %> = rowItem.<%= fieldName %>.join(',')
                <% } %>
                <%-- 系数处理 --%>
                <% if((string)ExtSubTableInfo[fieldName]["display"] == "input" || (string)ExtSubTableInfo[fieldName]["display"] == "inputNumber") { %>
                <% if((string)ExtSubTableInfo[fieldName]["rate"] != "") { %>
                rowItem.<%= fieldName %> = proxy.calc(rowItem.<%= fieldName %>, <%= ExtSubTableInfo[fieldName]["rate"] %>, { decimal: 0, type: 'div' })
                <% } %>
                <% } %>
                <% } %>
                <% } %>
            })
            <% } %>
            <%-- 子表验证 --%>
            <% if(isSubTableEditCheck) { %>
            if (!checkSubTableForm(_form.row.row_details)) return
            <% } %>
            <% } %>
            <%--
                主表：多选 数组格式 转换","分割字符串 & 系数处理
            --%>
            <% for(int i = 0; i < SourceTable.Columns.Count; i++) { %>
            <% string fieldName = SourceTable.Columns[i].Name; %>
            <% if((bool)ExtInfo[fieldName]["edit"] == true) { %>
            <%-- 数组转换字符串 --%>
            <% if((string)ExtInfo[fieldName]["display"] == "checkbox" || (string)ExtInfo[fieldName]["display"] == "selectMultiple") { %>
            _form.row.<%= fieldName %> = _form.row.<%= fieldName %>.join(',')
            <% } %>
            <%-- 系数处理 --%>
            <% if((string)ExtInfo[fieldName]["display"] == "input" || (string)ExtInfo[fieldName]["display"] == "inputNumber") { %>
            <% if((string)ExtInfo[fieldName]["rate"] != "") { %>
            _form.row.<%= fieldName %> = proxy.calc(_form.row.<%= fieldName %>, <%= ExtInfo[fieldName]["rate"] %>, { decimal: 0, type: 'div' })
            <% } %>
            <% } %>
            <% } %>
            <% } %>
            edit<%= SnakeFormatHump(SourceTable.Name, true) %>(_form).then(() => {
                proxy.$modal.msgSuccess('修改成功')
                open.value = false
                emit('updateList')
            })
        }
    })
}

/** 取消按钮 */
function cancel() {
    open.value = false
    reset()
}

/** 表单重置 */
function reset() {
    form.value.row = {
        <%-- 循环字段 --%>
        <% for(int i = 0; i < SourceTable.Columns.Count; i++) { %>
        <%
            // 字段名
            string fieldName = SourceTable.Columns[i].Name;
            // 字段是否是主键
            Boolean isPK = SourceTable.PrimaryKey.MemberColumns[0].Name == fieldName;
            if(isPK)
            {
                continue;
            }
        %>
        <%-- 判断字段是否设置添加 --%>
        <% if((bool)ExtInfo[fieldName]["edit"] == true) { %>
        <%-- 多选 数组类型 --%>
        <% if((string)ExtInfo[fieldName]["display"] == "checkbox" || (string)ExtInfo[fieldName]["display"] == "selectMultiple") { %>
        <%= fieldName %>: [],
        <% } else { %>
        <%= fieldName %>: null,
        <% } %>
        <% } %>
        <% } %>
        <%if(subTableName != "") {%>
        row_details: [],
        <% } %>
    }
    proxy.resetForm('<%= SnakeFormatHump(SourceTable.Name) %>Ref')
}

/**
 * 修改按钮操作
 * @param {import('@/api/<%= SnakeFormatHump(SourceTable.Name) %>').<%= SnakeFormatHump(SourceTable.Name, true) %>} row
 */
function handleEdit(row) {
    reset()
    <% if(subTableName != "") { %>
    getSubTableDetail(row.id)
    <% } %>
    form.value.row = row
    <%--
        主表：字符串 转换 数组格式 多选 & 系数处理
    --%>
    <% for(int i = 0; i < SourceTable.Columns.Count; i++) { %>
    <% string fieldName = SourceTable.Columns[i].Name; %>
    <% if((bool)ExtInfo[fieldName]["edit"] == true) { %>
    <%-- 字符串转换数组格式 --%>
    <% if((string)ExtInfo[fieldName]["display"] == "checkbox" || (string)ExtInfo[fieldName]["display"] == "selectMultiple") { %>
    <% if((string)ExtInfo[fieldName]["dict"] != "0" && (string)ExtInfo[fieldName]["dict"] != "") { %>
    <%-- dict_type： static 静态 table 动态 rules 规则 --%>
    <% if((string)ExtInfo[fieldName]["dict_type"] == "table") { %>
    form.value.row.<%= fieldName %> ? (form.value.row.<%= fieldName %> = proxy.string2Array(form.value.row.<%= fieldName %>, ',', 'Number')) : (form.value.row.<%= fieldName %> = [])
    <% } else { %>
    form.value.row.<%= fieldName %> ? (form.value.row.<%= fieldName %> = proxy.string2Array(form.value.row.<%= fieldName %>)) : (form.value.row.<%= fieldName %> = [])
    <% } %>
    <% } %>
    <% } %>
    <%-- 系数处理 --%>
    <% if((string)ExtInfo[fieldName]["display"] == "input" || (string)ExtInfo[fieldName]["display"] == "inputNumber") { %>
    <% if((string)ExtInfo[fieldName]["rate"] != "") { %>
    form.value.row.<%= fieldName %> = proxy.calc(form.value.row.<%= fieldName %>, <%= ExtInfo[fieldName]["rate"] %>)
    <% } %>
    <% } %>
    <% } %>
    <% } %>
    open.value = true
    title.value = '修改'
}
<% if(subTableName != "") { %>

/** 子表数据 */
const formSubTable = {
    <% foreach(string fieldName in subFieldNames) { %>
    <%-- 判断字段是否设置添加 --%>
    <% if((bool)ExtSubTableInfo[fieldName]["edit"] == true) { %>
    <%-- 多选 数组类型 --%>
    <% if((string)ExtSubTableInfo[fieldName]["display"] == "checkbox" || (string)ExtSubTableInfo[fieldName]["display"] == "selectMultiple") { %>
    <%= fieldName %>: [],
    <% } else { %>
    <%= fieldName %>: null,
    <% } %>
    <% } %>
    <% } %>
}

/** 添加子表数据 */
function handleSubTableAdd() {
    form.value.row.row_details.push(Object.assign({}, formSubTable))
}

/**
 * 删除子表数据
 * @param {Object} index
 */
function handleSubTableDelete(index) {
    form.value.row.row_details.splice(index, 1)
}
<% if(isSubTableEditCheck) { %>

/**
 * 验证子表数据
 * @param {Array} formDataList
 * @returns {boolean}
 */
function checkSubTableForm(formDataList) {
    for (const row of formDataList) {
        for (const rowKey in row) {
            <% foreach(string fieldName in subFieldNames) { %>
            <% if((bool)ExtSubTableInfo[fieldName]["edit"] == true) { %>
            <% if((bool)ExtSubTableInfo[fieldName]["required"] == true) { %>
            <%-- 必填验证 --%>
            if (rowKey === '<%= fieldName %>' && !row[rowKey]) {
                proxy.$modal.msgError(`明细<%= ExtSubTableInfo[fieldName]["label"] %>不能为空`)
                return false
            }
            <% } %>
            <% if((string)ExtSubTableInfo[fieldName]["rules"] != "" && (string)ExtSubTableInfo[fieldName]["rules"] != "0") { %>
            <%-- 正则验证 --%>
            <% foreach(JToken item in ExtSubTableInfo[fieldName]["rules_detail"]) { %>
            <%
                string message = "";
                if((string)item["memo"] != "") {
                    message = (string)ExtSubTableInfo[fieldName]["label"] + (string)item["memo"];
                } else {
                    message = (string)ExtSubTableInfo[fieldName]["label"] + "格式不正确";
                }
            %>
            if (rowKey === '<%= fieldName %>' && !(<%= item["value"] %>.test(row[rowKey]))) {
                proxy.$modal.msgError(`明细<%= message %>`)
                return false
            }
            <% } %>
            <% } %>
            <% } %>
            <% } %>
        }
    }
    return true
}
<% } %>

/**
 * 获取子表数据
 * @param {Number} id
 */
function getSubTableDetail(id) {
    subDetail<%= SnakeFormatHump(SourceTable.Name, true) %>(id).then((res) => {
        form.value.row.row_details = res.data
        <%--
            子表：字符串 转换 数组格式 多选 & 系数处理
        --%>
        <% if(isHandleSubTableData) { %>
        form.value.row.row_details.forEach((rowItem) => {
            <% foreach(string fieldName in subFieldNames) { %>
            <% if((bool)ExtSubTableInfo[fieldName]["edit"] == true) { %>
            <%-- 字符串转换数组格式 --%>
            <% if((string)ExtSubTableInfo[fieldName]["display"] == "checkbox" || (string)ExtSubTableInfo[fieldName]["display"] == "selectMultiple") { %>
            <% if((string)ExtSubTableInfo[fieldName]["dict"] != "0" && (string)ExtSubTableInfo[fieldName]["dict"] != "") { %>
            <%-- dict_type： static 静态 table 动态 rules 规则 --%>
            <% if((string)ExtSubTableInfo[fieldName]["dict_type"] == "table") { %>
            rowItem.<%= fieldName %> ? (rowItem.<%= fieldName %> = proxy.string2Array(rowItem.<%= fieldName %>, ',', 'Number')) : (rowItem.<%= fieldName %> = [])
            <% } else { %>
            rowItem.<%= fieldName %> ? (rowItem.<%= fieldName %> = proxy.string2Array(rowItem.<%= fieldName %>)) : rowItem.<%= fieldName %> = []
            <% } %>
            <% } %>
            <% } %>
            <%-- 系数处理 --%>
            <% if((string)ExtSubTableInfo[fieldName]["display"] == "input" || (string)ExtSubTableInfo[fieldName]["display"] == "inputNumber") { %>
            <% if((string)ExtSubTableInfo[fieldName]["rate"] != "") { %>
            rowItem.<%= fieldName %> = proxy.calc(rowItem.<%= fieldName %>, <%= ExtSubTableInfo[fieldName]["rate"] %>)
            <% } %>
            <% } %>
            <% } %>
            <% } %>
        })
        <% } %>
    })
}
<% } %>

defineExpose({ handleEdit })
</script>

<style scoped lang="scss"></style>
