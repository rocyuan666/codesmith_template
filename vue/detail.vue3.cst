<%@ Template Language="C#" TargetLanguage="Text" Description="vue3模板" %>
<%@ Assembly Name="SchemaExplorer" %>
<%@ Import Namespace="SchemaExplorer" %>
<%@ Import Namespace="CodeSmith.Engine.Json.Linq" %>
<%@ Import Namespace="System.Collections.Generic" %>

<%@ Property Name="SourceTable" Type="SchemaExplorer.TableSchema" Category="Context" Description="所基于的表" %>
<%@ Property Name="ExtJson" Type="JToken" Category="Context" Description="表额外数据" %>

<!-- #include file="..\\common\\utils.cst" -->
<!-- #include file="..\\common\\mapTypeTransform.cst" -->
<%
#region 准备子表数据

// 表字段额外数据
JToken ExtInfo = ExtJson["field"];
// 子表名称
string subTableName = (string)ExtJson["sub_table"];

// 子表字段额外数据
JToken ExtSubTableInfo = null;
// 子表字段名集合
List<string> subFieldNames = new List<string>();
if(subTableName != "") {
    ExtSubTableInfo = ExtJson["subTableJson"]["field"];
    foreach(JToken x in ExtSubTableInfo) {
        string fieldNameSub = x.Path.Split('.')[x.Path.Split('.').Length-1];
        subFieldNames.Add(fieldNameSub);
    }
}

#endregion

#region 编辑是否有配置校验

// 主表是否有配置校验
Boolean isEditCheck = false;
for(int i = 0; i < SourceTable.Columns.Count; i++)
{
    string fieldName = SourceTable.Columns[i].Name;
    if((bool)ExtInfo[fieldName]["edit"] == true && (bool)ExtInfo[fieldName]["required"] == true)
    {
        isEditCheck = true;
        break;
    }
}

// 子表是否有配置校验
Boolean isSubTableEditCheck = false;
foreach(string fieldName in subFieldNames) {
    if((bool)ExtSubTableInfo[fieldName]["edit"] == true && (bool)ExtSubTableInfo[fieldName]["required"] == true)
    {
        isSubTableEditCheck = true;
        break;
    }
}

#endregion

#region 字典标识收集 去除重复字典标识用作js变量

List<string> dicts = new List<string>();

// 主表字典处理
for(int i = 0; i < SourceTable.Columns.Count; i++)
{
    string fieldName = SourceTable.Columns[i].Name;
    if((string)ExtInfo[fieldName]["dict"] != "" && (string)ExtInfo[fieldName]["dict"] != "0")
    {
        if((string)ExtInfo[fieldName]["display"] == "select" || (string)ExtInfo[fieldName]["display"] == "radio" || (string)ExtInfo[fieldName]["display"] == "checkbox")
        {
            if(!dicts.Contains((string)ExtInfo[fieldName]["dict"]))
            {
                dicts.Add((string)ExtInfo[fieldName]["dict"]);
            }
        }
    }
}
// 子表字典处理
if(subTableName != "")
{
    foreach(string fieldName in subFieldNames)
    {
        if((string)ExtSubTableInfo[fieldName]["dict"] != "" && (string)ExtSubTableInfo[fieldName]["dict"] != "0")
        {
            if((string)ExtSubTableInfo[fieldName]["display"] == "select" || (string)ExtSubTableInfo[fieldName]["display"] == "radio" || (string)ExtSubTableInfo[fieldName]["display"] == "checkbox")
        {
            if(!dicts.Contains((string)ExtSubTableInfo[fieldName]["dict"]))
            {
                dicts.Add((string)ExtSubTableInfo[fieldName]["dict"]);
            }
        }
        }
    }
}

#endregion
%>
<template>
    <!-- draggable -->
    <el-dialog :title="title" v-model="open" width="1200px" :close-on-click-modal="false" append-to-body>
        <el-form ref="<%= SnakeFormatHump(SourceTable.Name) %>Ref" :model="form.row" :rules="rules" label-width="auto">
            <%-- 循环字段 --%>
            <% for(int i = 0; i < SourceTable.Columns.Count; i++) { %>
            <%
                // 字段名
                string fieldName = SourceTable.Columns[i].Name;
                // 字段是否是主键
                Boolean isPK = SourceTable.PrimaryKey.MemberColumns[0].Name == fieldName;
                if(isPK)
                {
                    continue;
                }
            %>
            <%-- 判断字段是否设置编辑 --%>
            <% if((bool)ExtInfo[fieldName]["edit"] == true) { %>
            <el-form-item label="<%= ExtInfo[fieldName]["label"] %>" prop="<%= fieldName %>">
                <%-- 判断字段对应的表单类型 --%>
                <% if((string)ExtInfo[fieldName]["display"] == "input") { %>
                <%-- 文本框 --%>
                <el-input v-model="form.row.<%= fieldName %>" placeholder="请输入<%= ExtInfo[fieldName]["label"] %>" :disabled="true" />
                <% } else if((string)ExtInfo[fieldName]["display"] == "textarea") { %>
                <%-- 文本域 --%>
                <el-input v-model="form.row.<%= fieldName %>" type="textarea" placeholder="请输入<%= ExtInfo[fieldName]["label"] %>" :disabled="true" />
                <% } else if((string)ExtInfo[fieldName]["display"] == "select") { %>
                <%-- 下拉框 --%>
                <el-select v-model="form.row.<%= fieldName %>" placeholder="请选择<%= ExtInfo[fieldName]["label"] %>" clearable :disabled="true">
                    <% if((string)ExtInfo[fieldName]["dict"] == "" || (string)ExtInfo[fieldName]["dict"] == "0") { %>
                    <el-option label="请手动写入选项 或者 选择字典生成" value="" />
                    <% } else { %>
                    <el-option v-for="dict in <%= ExtInfo[fieldName]["dict"] %>" :key="dict.value" :label="dict.label" :value="dict.value" />
                    <% } %>
                </el-select>
                <% } else if((string)ExtInfo[fieldName]["display"] == "radio") { %>
                <%-- 单选框 --%>
                <el-radio-group v-model="form.row.<%= fieldName %>" :disabled="true">
                    <% if((string)ExtInfo[fieldName]["dict"] == "" || (string)ExtInfo[fieldName]["dict"] == "0") { %>
                    <el-radio label="1">请手动写入选项 或者 选择字典生成</el-radio>
                    <% } else { %>
                    <el-radio v-for="dict in <%= ExtInfo[fieldName]["dict"] %>" :key="dict.value" :label="dict.value">{{dict.label}}</el-radio>
                    <% } %>
                </el-radio-group>
                <% } else if((string)ExtInfo[fieldName]["display"] == "checkbox") { %>
                <%-- 复选框 --%>
                <el-checkbox-group v-model="form.row.<%= fieldName %>" :disabled="true">
                    <% if((string)ExtInfo[fieldName]["dict"] == "" || (string)ExtInfo[fieldName]["dict"] == "0") { %>
                    <el-checkbox label="1">请手动写入选项 或者 选择字典生成</el-checkbox>
                    <% } else { %>
                    <el-checkbox v-for="dict in <%= ExtInfo[fieldName]["dict"] %>" :key="dict.value" :label="dict.value">{{dict.label}}</el-checkbox>
                    <% } %>
                </el-checkbox-group>
                <% } else if((string)ExtInfo[fieldName]["display"] == "datetime") { %>
                <%-- 日期时间 --%>
                <el-date-picker clearable v-model="form.row.<%= fieldName %>" type="datetime" value-format="YYYY-MM-DD HH:mm:ss" placeholder="请选择<%= ExtInfo[fieldName]["label"] %>" :disabled="true"></el-date-picker>
                <% } else if((string)ExtInfo[fieldName]["display"] == "date") { %>
                <%-- 日期 --%>
                <el-date-picker clearable v-model="form.row.<%= fieldName %>" type="date" value-format="YYYY-MM-DD" placeholder="请选择<%= ExtInfo[fieldName]["label"] %>" :disabled="true"></el-date-picker>
                <% } else if((string)ExtInfo[fieldName]["display"] == "imageUpload") { %>
                <%-- 图片上传 --%>
                <image-upload v-model="form.row.<%= fieldName %>" :disabled="true" />
                <% } else if((string)ExtInfo[fieldName]["display"] == "fileUpload") { %>
                <%-- 文件上传 --%>
                <file-upload v-model="form.row.<%= fieldName %>" :disabled="true" />
                <% } else if((string)ExtInfo[fieldName]["display"] == "editor") { %>
                <%-- 富文本控件 --%>
                <editor v-model="form.row.<%= fieldName %>" :min-height="192" :readOnly="true" />
                <% } %>
            </el-form-item>
            <% } %>
            <% } %>
            <%-- 子表数据添加 --%>
            <% if(subTableName != "") { %>
            <!-- 子表数据添加 -->
            <el-form-item label="明细" prop="row_details">
                <el-table :data="form.row.row_details" empty-text="暂无数据，点击下方+号填写明细~">
                    <%-- 循环字段 --%>
                    <% foreach(string fieldName in subFieldNames) { %>
                    <%-- 判断字段是否设置编辑 --%>
                    <% if((bool)ExtSubTableInfo[fieldName]["edit"] == true) { %>
                    <el-table-column label="<%= ExtSubTableInfo[fieldName]["label"] %>" align="center" prop="<%= fieldName %>">
                        <% if((bool)ExtSubTableInfo[fieldName]["required"] == true) { %>
                        <template #header> <span class="roc-require"></span><%= ExtSubTableInfo[fieldName]["label"] %> </template>
                        <% } %>
                        <template #default="{ row }">
                            <%-- 判断字段对应的表单类型 --%>
                            <% if((string)ExtSubTableInfo[fieldName]["display"] == "input") { %>
                            <%-- 文本框 --%>
                            <el-input v-model="row.<%= fieldName %>" placeholder="<%= ExtSubTableInfo[fieldName]["label"] %>" :disabled="true" />
                            <% } else if((string)ExtSubTableInfo[fieldName]["display"] == "textarea") { %>
                            <%-- 文本域 --%>
                            <el-input v-model="row.<%= fieldName %>" type="textarea" placeholder="<%= ExtSubTableInfo[fieldName]["label"] %>" :disabled="true" />
                            <% } else if((string)ExtSubTableInfo[fieldName]["display"] == "select") { %>
                            <%-- 下拉框 --%>
                            <el-select v-model="row.<%= fieldName %>" placeholder="<%= ExtSubTableInfo[fieldName]["label"] %>" clearable :disabled="true">
                                <% if((string)ExtSubTableInfo[fieldName]["dict"] == "" || (string)ExtSubTableInfo[fieldName]["dict"] == "0") { %>
                                <el-option label="请手动写入选项 或者 选择字典生成" value="" />
                                <% } else { %>
                                <el-option v-for="dict in <%= ExtSubTableInfo[fieldName]["dict"] %>" :key="dict.value" :label="dict.label" :value="dict.value" />
                                <% } %>
                            </el-select>
                            <% } else if((string)ExtSubTableInfo[fieldName]["display"] == "radio") { %>
                            <%-- 单选框 --%>
                            <el-radio-group v-model="row.<%= fieldName %>" :disabled="true">
                                <% if((string)ExtSubTableInfo[fieldName]["dict"] == "" || (string)ExtSubTableInfo[fieldName]["dict"] == "0") { %>
                                <el-radio label="1">请手动写入选项 或者 选择字典生成</el-radio>
                                <% } else { %>
                                <el-radio v-for="dict in <%= ExtSubTableInfo[fieldName]["dict"] %>" :key="dict.value" :label="dict.value">{{dict.label}}</el-radio>
                                <% } %>
                            </el-radio-group>
                            <% } else if((string)ExtSubTableInfo[fieldName]["display"] == "checkbox") { %>
                            <%-- 复选框 --%>
                            <el-checkbox-group v-model="row.<%= fieldName %>" :disabled="true">
                                <% if((string)ExtSubTableInfo[fieldName]["dict"] == "" || (string)ExtSubTableInfo[fieldName]["dict"] == "0") { %>
                                <el-checkbox label="1">请手动写入选项 或者 选择字典生成</el-checkbox>
                                <% } else { %>
                                <el-checkbox v-for="dict in <%= ExtSubTableInfo[fieldName]["dict"] %>" :key="dict.value" :label="dict.value">{{dict.label}}</el-checkbox>
                                <% } %>
                            </el-checkbox-group>
                            <% } else if((string)ExtSubTableInfo[fieldName]["display"] == "datetime") { %>
                            <%-- 日期时间 --%>
                            <el-date-picker clearable v-model="row.<%= fieldName %>" type="datetime" value-format="YYYY-MM-DD HH:mm:ss" placeholder="<%= ExtSubTableInfo[fieldName]["label"] %>" :disabled="true"></el-date-picker>
                            <% } else if((string)ExtSubTableInfo[fieldName]["display"] == "date") { %>
                            <%-- 日期 --%>
                            <el-date-picker clearable v-model="row.<%= fieldName %>" type="date" value-format="YYYY-MM-DD" placeholder="<%= ExtSubTableInfo[fieldName]["label"] %>" :disabled="true"></el-date-picker>
                            <% } else if((string)ExtSubTableInfo[fieldName]["display"] == "imageUpload") { %>
                            <%-- 图片上传 --%>
                            <image-upload v-model="row.<%= fieldName %>" :disabled="true" />
                            <% } else if((string)ExtSubTableInfo[fieldName]["display"] == "fileUpload") { %>
                            <%-- 文件上传 --%>
                            <file-upload v-model="row.<%= fieldName %>" :disabled="true" />
                            <% } else if((string)ExtSubTableInfo[fieldName]["display"] == "editor") { %>
                            <%-- 富文本控件 --%>
                            <editor v-model="row.<%= fieldName %>" :min-height="192" :readOnly="true" />
                            <% } %>
                        </template>
                    </el-table-column>
                    <% } %>
                    <% } %>
                </el-table>
            </el-form-item>
            <% } %>
        </el-form>
    </el-dialog>
</template>

<script setup name="<%= SnakeFormatHump(SourceTable.Name, true) %>Edit">
import { ref, getCurrentInstance, toRefs, reactive, inject } from 'vue'
import { detail<%= SnakeFormatHump(SourceTable.Name, true) %><% if(subTableName != "") { %>, subDetail<%= SnakeFormatHump(SourceTable.Name, true) %><% } %> } from '@/api/<%= SnakeFormatHump(SourceTable.Name) %>'

const { proxy } = getCurrentInstance()
<% if(dicts.Count != 0) { %>

// 注入字典数据
<% for(int i = 0; i < dicts.Count; i++) { %>
const <%= dicts[i] %> = inject('<%= dicts[i] %>', () => [])
<% } %>
<% } %>

/**
 * 原data 类型
 * @typedef TargetData
 * @property {Object} form
 * @property {import('@/api/faAdmin').FaAdmin | Object} form.row
 * @property {import('element-plus').FormRules<import('@/api/faAdmin').FaAdmin>} rules
 */

/**@type {UnwrapNestedRefs<TargetData>} */
const data = reactive({
    form: {
        row: {},
    },
})

/**@type {ToRef<UnwrapNestedRefs<TargetData>["form"]>} */
const form = toRefs(data).form

/**@type {import('vue').Ref<Boolean>} */
const open = ref(false)

/**@type {import('vue').Ref<String>} */
const title = ref('')

/** 表单重置 */
function reset() {
    form.value.row = {
        <%-- 循环字段 --%>
        <% for(int i = 0; i < SourceTable.Columns.Count; i++) { %>
        <%
            // 字段名
            string fieldName = SourceTable.Columns[i].Name;
            // 字段是否是主键
            Boolean isPK = SourceTable.PrimaryKey.MemberColumns[0].Name == fieldName;
            if(isPK)
            {
                continue;
            }
        %>
        <%-- 判断字段是否设置添加 --%>
        <% if((bool)ExtInfo[fieldName]["edit"] == true) { %>
        <%-- 判断字段对应的表单类型 --%>
        <% if((string)ExtInfo[fieldName]["display"] == "checkbox") { %>
        <%= fieldName %>: [],
        <% } else { %>
        <%= fieldName %>: null,
        <% } %>
        <% } %>
        <% } %>
        <%if(subTableName != "") {%>
        row_details: [],
        <% } %>
    }
    proxy.resetForm('<%= SnakeFormatHump(SourceTable.Name) %>Ref')
}

/**
 * 详情按钮操作
 * @param {import('@/api/<%= SnakeFormatHump(SourceTable.Name) %>').<%= SnakeFormatHump(SourceTable.Name, true) %>} row
 */
async function handleDetail(row) {
    reset()
    const res = await detail<%= SnakeFormatHump(SourceTable.Name, true) %>({ id: row.id })
    form.value.row = res.data
    getSubTableDetail(row.id)
    open.value = true
    title.value = '详情'
}
<% if(subTableName != "") { %>

/** 子表数据 */
const formSubTable = {
    <% foreach(string fieldName in subFieldNames) { %>
    <% if((bool)ExtSubTableInfo[fieldName]["edit"] == true) { %>
    <%= fieldName %>: null,
    <% } %>
    <% } %>
}

/**
 * 获取子表数据
 * @param {Number} id
 */
function getSubTableDetail(id) {
    subDetail<%= SnakeFormatHump(SourceTable.Name, true) %>(id).then((res) => {
        form.value.row.row_details = res.data
    })
}
<% } %>

defineExpose({ handleEdit })
</script>

<style scoped lang="scss"></style>
