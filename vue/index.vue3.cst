<%@ Template Language="C#" TargetLanguage="Text" Description="vue3模板" %>
<%@ Assembly Name="SchemaExplorer" %>
<%@ Import Namespace="SchemaExplorer" %>


<%@ Property Name="SourceTable" Type="SchemaExplorer.TableSchema" Category="Context" Description="所基于的表" %>

<!-- #include file="..\\common\\utils.cst" -->
<!-- #include file="..\\common\\mapTypeTransform.cst" -->
<template>
    <div>
        <el-row :gutter="10">
            <el-col :span="1.5">
                <el-button type="primary" plain icon="Plus" @click="handleAdd">新增</el-button>
            </el-col>
        </el-row>
        <el-table v-loading="loading" :data="<%= SnakeFormatHump(SourceTable.Name) %>List" empty-text="暂无数据~">
            <el-table-column type="selection" width="55" align="center" />
            <% for(int i = 0; i < SourceTable.Columns.Count; i++) { %>
            <el-table-column label="<%= SourceTable.Columns[i].Description %>" align="center" prop="<%= SourceTable.Columns[i].Name %>" />
            <% } %>
            <el-table-column label="操作" align="center">
                <template #default="scope">
                    <el-button link type="primary" icon="Edit" @click="handleUpdate(scope.row)">修改</el-button>
                    <el-button link type="primary" icon="Delete" @click="handleDelete(scope.row)">删除</el-button>
                </template>
            </el-table-column>
        </el-table>
    </div>
</template>

<script setup name="<%= SnakeFormatHump(SourceTable.Name, true) %>">
import { ref, getCurrentInstance } from 'vue'
import { list<%= SnakeFormatHump(SourceTable.Name, true) %>, del<%= SnakeFormatHump(SourceTable.Name, true) %> } from '@/api/<%= SnakeFormatHump(SourceTable.Name) %>'

const { proxy } = getCurrentInstance()

/**@type {import('vue').Ref<Boolean>} */
const loading = ref(false)

/**@type {import('vue').Ref<import('@/api/<%= SnakeFormatHump(SourceTable.Name) %>').<%= SnakeFormatHump(SourceTable.Name, true) %>[]>} */
const <%= SnakeFormatHump(SourceTable.Name) %>List = ref([])

/** 查询 <%= SourceTable.Description %> 列表 */
async function getList() {
    loading.value = true
    try {
        const res = await list<%= SnakeFormatHump(SourceTable.Name, true) %>()
        <%= SnakeFormatHump(SourceTable.Name) %>List.value = res.data
    } catch (error) {
        /* empty */
    }
    loading.value = false
}

/**
 * 删除按钮操作
 * @param {import('@/api/<%= SnakeFormatHump(SourceTable.Name) %>').<%= SnakeFormatHump(SourceTable.Name, true) %>} row
 */
function handleDelete(row) {
    const id = row.<%= SourceTable.PrimaryKey.MemberColumns[0].Name %>
    proxy.$modal
        .confirm('是否确认删除编号为"' + id + '"的数据项？')
        .then(function () {
            return delFaAdmin({ id })
        })
        .then(() => {
            getList()
            proxy.$modal.msgSuccess('删除成功')
        })
        .catch(() => {})
}

/** 新增按钮操作 */
function handleAdd() {
    proxy.$modal.msgSuccess('新增操作')
}

getList()
</script>

<style scoped lang="scss"></style>
